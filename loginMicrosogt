from msal import PublicClientApplication
import requests

app = PublicClientApplication(
    "yourApplication_(client)_ID",
    authority="https://login.microsoftonline.com/yourDirectory_(tenant)_ID")

result = None  # It is just an initial value. Please follow instructions below.

# We now check the cache to see
# whether we already have some accounts that the end user already used to sign in before.
accounts = app.get_accounts()
if accounts:
    # If so, you could then somehow display these accounts and let end user choose
    print("Pick the account you want to use to proceed:")
    for a in accounts:
        print(a["username_login"])
    # Assuming the end user chose this one
    chosen = accounts[0]
    # Now let's try to find a token in cache for this account
    result = app.acquire_token_silent(["User.Read"], account=chosen)

if not result:
    # So no suitable token exists in cache. Let's get a new one from AAD.
    result = app.acquire_token_interactive(scopes=["User.Read"])
if "access_token" in result:
    #print(result["access_token"])  # Yay!
    headers = {'Authorization': 'Bearer ' + result['access_token']}
    graph_data = requests.get(
        'https://graph.microsoft.com/v1.0/me/',
        headers=headers).json()
    #print(graph_data)  # Print user data

    def get_user_data():
        # Extract user data
        name = graph_data['givenName']
        lastname = graph_data['surname']
        username_login = graph_data['userPrincipalName']
        print(name, lastname, username_login)
        return name, lastname, username_login
    get_user_data()

else:
    print(result.get("error"))
    print(result.get("error_description"))
    print(result.get("correlation_id"))  # You may need this when reporting a bug
